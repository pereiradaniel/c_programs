==129== Memcheck, a memory error detector
==129== Copyright (C) 2002-2017, and GNU GPL'd, by Julian a
Seward et al.
==129== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==129== Command: ./scanf
==129== 
                                                          r
Enter an integer and then a decimal number (assigned to a 
double):                                                  r
Example input: 4 5.6
2
4.53                                                      d

Integer was: 2, and Double was: 4.530000.
==129== 
==129== HEAP SUMMARY:
==129==     in use at exit: 0 bytes in 0 blocks
==129==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated                                                r
==129== 
==129== All heap blocks were freed -- no leaks are possiblre
==129== 
==129== For lists of detected and suppressed errors, rerunr with: -s
==129== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

==130== Memcheck, a memory error detector
==130== Copyright (C) 2002-2017, and GNU GPL'd, by Julian 
Seward et al.
==130== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==130== Command: ./scanf
==130==

Enter an integer and then a decimal number (assigned to a 
double):
Example input: 4 5.6
2 7.8

Integer was: 2, and Double was: 7.800000.
==130== 
==130== HEAP SUMMARY:
==130==     in use at exit: 0 bytes in 0 blocks
==130==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==130==
==130== All heap blocks were freed -- no leaks are possible
==130==
==130== For lists of detected and suppressed errors, rerun with: -s
==130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)